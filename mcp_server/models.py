# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T02:37:24+00:00

from __future__ import annotations

from enum import Enum
from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field


class GoogleCloudPolicyanalyzerV1beta1ObservationPeriod(BaseModel):
    endTime: Optional[str] = Field(None, description='The observation end time.')
    startTime: Optional[str] = Field(None, description='The observation start time.')


class FieldXgafv(Enum):
    field_1 = '1'
    field_2 = '2'


class Alt(Enum):
    json = 'json'
    media = 'media'
    proto = 'proto'


class GoogleCloudPolicyanalyzerV1beta1Activity(BaseModel):
    activity: Optional[Dict[str, Any]] = Field(
        None, description='A struct of custom fields to explain the activity.'
    )
    activityType: Optional[str] = Field(None, description='The type of the activity.')
    fullResourceName: Optional[str] = Field(
        None,
        description='The full resource name that identifies the resource. For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names.',
    )
    observationPeriod: Optional[GoogleCloudPolicyanalyzerV1beta1ObservationPeriod] = (
        Field(None, description='The data observation period to build the activity.')
    )


class GoogleCloudPolicyanalyzerV1beta1QueryActivityResponse(BaseModel):
    activities: Optional[List[GoogleCloudPolicyanalyzerV1beta1Activity]] = Field(
        None,
        description='The set of activities that match the filter included in the request.',
    )
    nextPageToken: Optional[str] = Field(
        None,
        description='If there might be more results than those appearing in this response, then `nextPageToken` is included. To get the next set of results, call this method again using the value of `nextPageToken` as `pageToken`.',
    )
